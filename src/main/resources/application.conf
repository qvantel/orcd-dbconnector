gen.countries.file="/mcc-mnc-table.json"

processing {
  batchSize = 250
  fetchBatchSize = 10000
  updateInterval = 10000
}

spark {
  cassandra {
    keyspace = "qvantel"
    username = "cassandra"
    password = "cassandra"
    host = "127.0.0.1"
    port = 9042
  }
}

cassandra {
  cdrTable = "cdr"
  cdrSyncTable = "cdrsync"
}

graphite {
  host = "127.0.0.1"
  port = 2003
}

dispatcher {
  timeout = 5000
  timeStampIntervalSeconds = 10
}

kamon {

  metric {
    tick-interval = 10 second
  }

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 10 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    # FQCN of the implementation of `kamon.statsd.MetricKeyGenerator` to be instantiated and used for assigning
    # metric names. The implementation must have a single parameter constructor accepting a `com.typesafe.config.Config`.
    metric-key-generator = se.qvantel.connector.kamonz.SimpleMetricKeyGenerator


    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "qvantel"

      # Includes the name of the hostname in the generated metric. When set to false, the scheme for the metrics
      # will look as follows:
      #    application.entity.entity-name.metric-name
      include-hostname = false

      # Allow users to override the name of the hostname reported by kamon. When changed, the scheme for the metrics
      # will have the following pattern:
      #   application.hostname-override-value.entity.entity-name.metric-name
      hostname-override = none

      # When the sections that make up the metric names have special characters like dots (very common in dispatcher
      # names) or forward slashes (all actor metrics) we need to sanitize those values before sending them to StatsD
      # with one of the following strategies:
      #   - normalize: changes ': ' to '-' and ' ', '/' and '.' to '_'.
      #   - percent-encode: percent encode the section on the metric name. Please note that StatsD doesn't support
      #     percent encoded metric names, this option is only useful if using our docker image which has a patched
      #     version of StatsD or if you are running your own, customized version of StatsD that supports this.
      metric-name-normalization-strategy = normalize
    }
    metric-sender-factory = se.qvantel.connector.kamonz.BatchStatsDMetricsSender


    subscriptions {
    }

    batch-metric-sender {
      # Max packet size for UDP metrics data sent to StatsD.
      max-packet-size = 1024 bytes
    }

  }

  modules {
    kamon-statsd {
      requires-aspectj = no
      auto-start = yes
      extension-class = "kamon.statsd.StatsD"
    }
    kamon-log-reporter.auto-start = yes
    kamon-statsd.auto-start = no
  }

}
