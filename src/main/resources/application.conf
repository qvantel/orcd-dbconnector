gen.countries.file="/mcc-mnc-table.json"

processing {
  batchSize = 250
  fetchBatchSize = 10000
  updateInterval = 10000
}

spark {
  cassandra {
    keyspace = "qvantel"
    username = "cassandra"
    password = "cassandra"
    host = "127.0.0.1"
    port = 9042
  }
}

cassandra {
  cdrTable = "cdr"
  cdrSyncTable = "cdrsync"
}

graphite {
  host = "127.0.0.1"
  port = 2003
}

dispatcher {
  timeout = 5000
  timeStampIntervalSeconds = 10
}

# Link to offical Kamon conf, that includes more details of the settings down below
# https://github.com/kamon-io/kamon-statsd/blob/v0.6.6/src/main/resources/reference.conf

kamon {
  metric.tick-interval = 10 seconds

  statsd {
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metric.tick-interval setting.
    flush-interval = 10 seconds

    subscriptions {
      counter         = [ "**" ]
    }

    # FQCN of the implementation of `kamon.statsd.MetricKeyGenerator` to be instantiated and used for assigning
    # metric names. The implementation must have a single parameter constructor accepting a `com.typesafe.config.Config`.
    metric-key-generator = se.qvantel.connector.SimpleMetricKeyGenerator

    simple-metric-key-generator {
      application = "qvantel"
      include-hostname = false
      hostname-override = none
      metric-name-normalization-strategy = normalize
    }

    metric-sender-factory = kamon.statsd.BatchStatsDMetricsSender

    batch-metric-sender {
      max-packet-size = 1024 bytes
    }
  }
  modules {
    kamon-statsd {
      requires-aspectj = no
      auto-start = yes
      extension-class = "kamon.statsd.StatsD"
    }
  }
}


